# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.



#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
    Sequence:
        type: str
    Shot:
        type: str
    Step:
        type: str
    sg_asset_type:
        type: str
    Asset:
        type: str
    name:
        type: str
        filter_by: alphanumeric
    iteration:
        type: int
    version:
        type: int
        format_spec: "03"
    version_four:
       type: int
       format_spec: "04"
       alias: version
    timestamp:
        type: str
    width:
        type: int
    height:
        type: int
    segment_name:
        type: str
    texture_extension:
        type: str
        alias: extension
    texture_name:
        type: str

    # Represents the optional output name for frames written by the Shotgun Write Node
    nuke.output:
        alias: output
        type: str
        filter_by: alphanumeric

    SEQ:
        type: sequence
        format_spec: "04"
    eye:
        type: str

    houdini.node:
        alias: node
        type: str
    aov_name:
        type: str

    # these are used by the Hiero exporter and pipeline
    YYYY:
        type: int
        format_spec: "04"
    MM:
        type: int
        format_spec: "02"
    DD:
        type: int
        format_spec: "02"
        alias: DD
    project:
        type: str

    # Maya supports two extension types.
    maya_extension:
        type: str
        choices:
            ma: Maya Ascii (.ma)
            mb: Maya Binary (.mb)
        default: mb
        alias: extension

    ## SPECIALS
    cam_name:
        type: str
    grp_name:
        type: str
    shd_model:
        type: str
    presetName:
        type: str
        filter_by: alphanumeric
    textureName:
        type: str
        filter_by: alphanumeric
    projectName:
        type: str
        filter_by: alphanumeric
#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#
# In this default configuration, all of the root_name keys will be set to 'primary'.
# This is because the default configuration stores all its production data in a single
# tree and hence uses a single root folder on disk. If you wanted to extend the
# configuration to span multiple root points, for example because you want to store
# renders on a different server, you could define an additional root in Shotgun, and
# then switch any relevant templates to point to that one instead.
#

paths:

    # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
    # templates. This also makes it easy to change any of the common root paths and have the
    # changes apply to all templates that use them.
    #
    # These don't require the standard formatting (with definition and root_name) because they
    # will be set within each template that uses the alias.
    shot_root: sequences/{Sequence}/{Shot}/{Step}
    asset_root: assets/{sg_asset_type}/{Asset}/{Step}
    sequence_root: sequences/{Sequence}
    nukeRendersRoot: sequences/{Sequence}/{Shot}/

    ## MY CONIFG BASED TEMPLATES
    ## DEFAULT ASSEMBLY DEFINITION SECONDARY PATHS
    maya_asset_ADEF_alembic:
        definition: '@asset_root/publish/alembic/{name}_ABC.v{version}.abc'
        root_name: 'primary'
    maya_asset_ADEF_boundingbox:
        definition: '@asset_root/publish/bbox/{name}_BBox.v{version}.mb'
        root_name: 'primary'
    maya_asset_ADEF_lowRes:
        definition: '@asset_root/publish/mayalo/{name}_LowRes.v{version}.mb'
        root_name: 'primary'
    maya_asset_ADEF_gpu:
        definition: '@asset_root/publish/gpu/{name}_GPU.v{version}.abc'
        root_name: 'primary'
    maya_asset_ADEF_assembly:
        definition: '@asset_root/publish/assemblyDef/{name}_ADef.v{version}.ma'
        root_name: 'primary'
    maya_asset_GOZ:
        definition: '@asset_root/publish/mayaGoZ/v{version}/'
        root_name: 'primary'
    maya_asset_GOZ_ztn:
        definition: '@asset_root/publish/zbrushGoZ/v{version}/'
        root_name: 'primary'
    maya_asset_zbrush:
        definition: '@asset_root/publish/ZBrushZTL/v{version}/'
        root_name: 'primary'
    maya_asset_substance:
        definition: '@asset_root/publish/substance/v{version}/'
        root_name: 'primary'

    ## SHADING Paths
    maya_asset_SHD_YAML:
        definition: '@asset_root/publish/shd_yaml/{name}_shd.v{version}.yaml'
        root_name: 'primary'
    maya_asset_textures:
        definition: '@asset_root/publish/sourceimages/'
        root_name: 'primary'
    maya_asset_textures_dg:
        definition: '@asset_root/publish/sourceimages/256/'
        root_name: 'primary'
    maya_asset_uvxml:
        definition: '@asset_root/publish/uv_xml/{name}_uv.v{version}.xml'
        root_name: 'primary'

    ## SHOT SECONDARY OUTPUT PATHS
    maya_shot_lightingRenderPreview:
        definition: '@nukeRendersRoot/RenderLayers/R{version}_preview/'
        root_name: 'primary'
    maya_shot_lightingRenderFinal:
        definition: '@nukeRendersRoot/RenderLayers/R{version}'
        root_name: 'primary'
    maya_shot_fxRenderFinal:
        definition: '@nukeRendersRoot/FxLayers/R{version}'
        root_name: 'primary'
    maya_shot_anim_atom:
        definition: '@shot_root/publish/atom/v{version}/{name}.v{version}.atom'
        root_name: 'primary'
    ## SHOT SECONDARY OUTPUT PATHS
    maya_shot_static_alembic:
        definition:  '@shot_root/publish/alembic_static/v{version}/{name}_{grp_name}.v{version}.abc'
        root_name: 'primary'
    maya_shot_static_alembic_versionFolder:
        definition: '@shot_root/publish/alembic_static/v{version}/'
        root_name: 'primary'
    maya_shot_anim_alembic:
        definition:  '@shot_root/publish/alembic_anim/v{version}/{name}_{grp_name}.v{version}.abc'
        root_name: 'primary'
    maya_shot_anim_alembic_versionFolder:
        definition:  '@shot_root/publish/alembic_anim/v{version}/'
        root_name: 'primary'
    maya_shot_gpu:
        definition:  '@shot_root/publish/gpu/v{version}/{name}_{grp_name}.v{version}.abc'
        root_name: 'primary'
    maya_shot_gpu_versionFolder:
        definition:  '@shot_root/publish/gpu/v{version}/'
        root_name: 'primary'
    maya_shot_cam:
        definition: '@shot_root/publish/cam/v{version}/{cam_name}.v{version}.ma'
        root_name: 'primary'
    maya_shot_cam_versionFolder:
        definition: '@shot_root/publish/cam/v{version}/'
        root_name: 'primary'
    maya_shot_nukecam:
        definition: '@shot_root/publish/nuke/v{version}/{cam_name}.v{version}.abc'
        root_name: 'primary'
    maya_shot_lights:
        definition: '@shot_root/publish/lightxml/v{version}/{name}.v{version}.xml'
        root_name: 'primary'
    maya_shot_renderglobals:
        definition: '@shot_root/publish/rglobxml/v{version}/{name}.v{version}.xml'
        root_name: 'primary'
    maya_shot_SHD_YAML:
        definition: '@shot_root/publish/shd_yaml/v{version}/{name}.v{version}.yaml'
        root_name: 'primary'
    maya_shot_lightingRenderPreview:
        definition: '@nukeRendersRoot/RenderLayers/R{version}_preview/'
        root_name: 'primary'
    maya_shot_lightingRenderFinal:
        definition: '@nukeRendersRoot/RenderLayers/R{version}'
        root_name: 'primary'
    maya_shot_fxRenderFinal:
        definition: '@nukeRendersRoot/FxLayers/R{version}'
        root_name: 'primary'
    maya_shot_anim_atom:
        definition: '@shot_root/publish/atom/v{version}/{name}.v{version}.atom'
        root_name: 'primary'
    ## CUSTOM APPLICATION TEMPLATES
    ## tk-submit-mayaplayblast TEMPLATES
    maya_shot_playblast:
        definition: '@shot_root/publish/review/{name}.v{version}.mov'
        root_name: 'primary'
    maya_shotwork_playblast:
        definition: '@shot_root/work/review/{name}.v{version}.mov'
        root_name: 'primary'
    maya_asset_playblast:
        definition: '@asset_root/publish/review/{name}.v{version}.mov'
        root_name: 'primary'
    maya_assetwork_playblast:
        definition: '@asset_root/work/review/{name}.v{version}.mov'
        root_name: 'primary'

    #
    # Maya
    #

    # define the location of a work area
    asset_work_area_maya:
        definition: '@asset_root/work/maya'
        root_name: 'primary'
    # define the location of a publish area
    asset_publish_area_maya:
        definition: '@asset_root/publish/maya'
        root_name: 'primary'
    # The location of WIP files
    maya_asset_work:
        definition: '@asset_root/work/maya/{name}.v{version}.{maya_extension}'
        root_name: 'primary'
    # The location of backups of WIP files
    maya_asset_snapshot:
        definition: '@asset_root/work/maya/snapshots/{name}.v{version}.{timestamp}.{maya_extension}'
        root_name: 'primary'
    # The location of published maya files
    maya_asset_publish:
        definition: '@asset_root/publish/maya/{name}.v{version}.{maya_extension}'
        root_name: 'primary'

   # define the location of a work area
    shot_work_area_maya:
        definition: '@shot_root/work/maya'
        root_name: 'primary'
    # define the location of a publish area
    shot_publish_area_maya:
        definition: '@shot_root/publish/maya'
        root_name: 'primary'
    # The location of WIP files
    maya_shot_work:
        definition: '@shot_root/work/maya/{name}.v{version}.{maya_extension}'
        root_name: 'primary'
    # The location of backups of WIP files
    maya_shot_snapshot:
        definition: '@shot_root/work/maya/snapshots/{name}.v{version}.{timestamp}.{maya_extension}'
        root_name: 'primary'
    # The location of published maya files
    maya_shot_publish:
        definition: '@shot_root/publish/maya/{name}.v{version}.{maya_extension}'
        root_name: 'primary'
    #
    # Houdini
    #

    # define the location of a work area
    shot_work_area_houdini:
        definition: '@shot_root/work/houdini'
        root_name: 'primary'
    # define the location of a publish area
    shot_publish_area_houdini:
        definition: '@shot_root/publish/houdini'
        root_name: 'primary'
    # The location of WIP files
    houdini_shot_work:
        definition: '@shot_root/work/houdini/{name}.v{version}.hip'
        root_name: 'primary'
    # The location of backups of WIP files
    houdini_shot_snapshot:
        definition: '@shot_root/work/houdini/snapshots/{name}.v{version}.{timestamp}.hip'
        root_name: 'primary'
    # The location of published houdini files
    houdini_shot_publish:
        definition: '@shot_root/publish/houdini/{name}.v{version}.hip'
        root_name: 'primary'
    # Alembic caches
    houdini_shot_work_alembic_cache:
        definition: '@shot_root/work/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{Shot}_{name}_v{version}.abc'
        root_name: 'primary'

    # Rendered images
    houdini_shot_render:
        definition: '@shot_root/work/images/{name}/{houdini.node}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.exr'
        root_name: 'primary'

    # Additional mantra outputs
    houdini_shot_ifd:
        definition: '@shot_root/work/ifds/{name}/{houdini.node}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.ifd'
        root_name: 'primary'

    houdini_shot_dcm:
        definition: '@shot_root/work/dcms/{name}/{houdini.node}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.dcm'
        root_name: 'primary'

    houdini_shot_extra_plane:
        definition: '@shot_root/work/images/{name}/{houdini.node}/{aov_name}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.exr'
        root_name: 'primary'
    #
    # Nuke
    #
    # define the location of a work area
    shot_work_area_nuke:
        definition: '@shot_root/work/nuke'
        root_name: 'primary'
    # define the location of a publish area
    shot_publish_area_nuke:
        definition: '@shot_root/publish/nuke'
        root_name: 'primary'
    # The location of WIP script files
    nuke_shot_work:
        definition: '@shot_root/work/nuke/{name}.v{version}.nk'
        root_name: 'primary'
    # The location of backups of WIP files
    nuke_shot_snapshot:
        definition: '@shot_root/work/nuke/snapshots/{name}.v{version}.{timestamp}.nk'
        root_name: 'primary'
    # The location of published nuke script files
    nuke_shot_publish:
        definition: '@shot_root/publish/nuke/{name}.v{version}.nk'
        root_name: 'primary'
    # write node outputs
    nuke_shot_render_mono_dpx:
        definition: '@shot_root/work/images/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_v{version}.{SEQ}.dpx'
        root_name: 'primary'
    nuke_shot_render_pub_mono_dpx:
        definition: '@shot_root/publish/elements/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_v{version}.{SEQ}.dpx'
        root_name: 'primary'
    nuke_shot_render_stereo:
        definition: '@shot_root/work/images/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_{eye}_v{version}.{SEQ}.exr'
        root_name: 'primary'
    nuke_shot_render_pub_stereo:
        definition: '@shot_root/publish/elements/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_{eye}_v{version}.{SEQ}.exr'
        root_name: 'primary'
    # review output
    shot_quicktime_quick:
        definition: '@shot_root/review/quickdaily/{Shot}_{name}_{iteration}.mov'
        root_name: 'primary'
    nuke_shot_render_movie:
        definition: '@shot_root/review/{Shot}_{name}_{nuke.output}_v{version}.mov'
        root_name: 'primary'

    ##########################################################################################
    # Asset pipeline
    #
    # Alembic caches
    #
    asset_alembic_cache:
        definition: '@asset_root/publish/caches/{name}.v{version}.abc'
        root_name: 'primary'
    #
    # Houdini
    #

    # define the location of a work area
    asset_work_area_houdini:
        definition: '@asset_root/work/houdini'
        root_name: 'primary'
    # define the location of a publish area
    asset_publish_area_houdini:
        definition: '@asset_root/publish/houdini'
        root_name: 'primary'
    # The location of WIP files
    houdini_asset_work:
        definition: '@asset_root/work/houdini/{name}.v{version}.hip'
        root_name: 'primary'
    # The location of backups of WIP files
    houdini_asset_snapshot:
        definition: '@asset_root/work/houdini/snapshots/{name}.v{version}.{timestamp}.hip'
        root_name: 'primary'
    # The location of published houdini files
    houdini_asset_publish:
        definition: '@asset_root/publish/houdini/{name}.v{version}.hip'
        root_name: 'primary'
    # Alembic caches
    houdini_asset_work_alembic_cache:
        definition: '@asset_root/work/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{Asset}_{name}_v{version}.abc'
        root_name: 'primary'

    # Rendered images
    houdini_asset_render:
        definition: '@asset_root/work/images/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.exr'
        root_name: 'primary'

    # Additional mantra outputs
    houdini_asset_ifd:
        definition: '@asset_root/work/ifds/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.ifd'
        root_name: 'primary'

    houdini_asset_dcm:
        definition: '@asset_root/work/dcms/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.dcm'
        root_name: 'primary'

    houdini_asset_extra_plane:
        definition: '@asset_root/work/images/{name}/{houdini.node}/{aov_name}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.exr'
        root_name: 'primary'
    #
    # Nuke
    #
    # define the location of a work area
    asset_work_area_nuke:
        definition: '@asset_root/work/nuke'
        root_name: 'primary'
    # define the location of a publish area
    asset_publish_area_nuke:
        definition: '@asset_root/publish'
        root_name: 'primary'
    # outputs from the Shotgun Write Node for assets
    nuke_asset_render:
        definition: '@asset_root/work/images/{name}/v{version}/{width}x{height}/{Asset}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
        root_name: 'primary'
    nuke_asset_render_pub:
        definition: '@asset_root/publish/elements/{name}/v{version}/{width}x{height}/{Asset}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
        root_name: 'primary'
    # review output
    nuke_asset_render_movie:
        definition: '@asset_root/review/{Asset}_{name}_{nuke.output}_v{version}.mov'
        root_name: 'primary'
    asset_quicktime_quick:
        definition: '@asset_root/review/quickdaily/{Asset}_{name}_{iteration}.mov'
        root_name: 'primary'
    # The location of WIP script files
    nuke_asset_work:
        definition: '@asset_root/work/nuke/{name}.v{version}.nk'
        root_name: 'primary'
    # The location of backups of WIP files
    nuke_asset_snapshot:
        definition: '@asset_root/work/nuke/snapshots/{name}.v{version}.{timestamp}.nk'
        root_name: 'primary'
    # The location of published nuke script files
    nuke_asset_publish:
        definition: '@asset_root/publish/nuke/{name}.v{version}.nk'
        root_name: 'primary'
    #
    # Substance Painter
    #
    # asset
    # define the location of a work area
    asset_work_area_substancepainter:
        definition: '@asset_root/work/substancepainter'
        root_name: 'primary'
    # define the location of a publish area
    asset_publish_area_substancepainter:
        definition: '@asset_root/publish/substancepainter'
        root_name: 'primary'

    # The location of WIP files
    substancepainter_asset_work:
        definition: '@asset_work_area_substancepainter/{name}.v{version}.spp'
        root_name: 'primary'

    # The location of backups of WIP files
    substancepainter_asset_snapshot:
        definition: '@asset_work_area_substancepainter/snapshots/{name}.v{version}.{timestamp}.spp'
        root_name: 'primary'

    # The folder where the textures are exported for a project
    substancepainter_asset_textures_path_export:
        definition: '@asset_work_area_substancepainter/export'
        root_name: 'primary'

    # The location of published substance painter files
    substancepainter_asset_publish:
        definition: '@asset_publish_area_substancepainter/{name}.v{version}.spp'
        root_name: 'primary'

    # a texture folder publish
    substancepainter_asset_textures_path_publish:
        definition: '@asset_publish_area_substancepainter/textures/{Asset}_textures_v{version}'
        root_name: 'primary'

    # a texture folder publish
    substancepainter_asset_texture_path_publish:
        definition: '@asset_publish_area_substancepainter/textures/{Asset}_{texture_name}_v{version}.{texture_extension}'
        root_name: 'primary'

#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#
strings:

    # when a review Version in Shotgun is created inside of Nuke, this is the
    # name that is being given to it (the code field)
    nuke_shot_version_name: "{Shot}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"
    nuke_asset_version_name: "{Asset}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"
